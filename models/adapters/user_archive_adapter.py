import datetime

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import Optional
from database.db import session_factory
from models.controls.user_archive_controls import UserArchiveControl




class UserArchiveAdapter:
    def __init__(self, user_id: Optional[int] = None):
        self._user_id = user_id
        self._inline_keyboard = InlineKeyboardMarkup()
        self._msg = ''

    @property
    def inline_keyboard(self) -> InlineKeyboardMarkup:
        return self._inline_keyboard

    @property
    def message_text(self) -> str:
        return self._msg


    #buttons
    async def archive_btn(self):
        self._msg = '<b>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∞—Ä—Ö–∏–≤–µ üóÑ</b>\n\n' \
                    '–í –∞—Ä—Ö–∏–≤ –ø–æ–ø–∞–¥–∞—é—Ç –∫–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–∫–∞–∑–∞–Ω—ã —É—Å–ª—É–≥–∏' \
                    ' –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å, –Ω–æ –¥–æ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏ –Ω–µ –¥–æ—à–ª–∏.'
        keyboard = InlineKeyboardMarkup().add(
             InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ üìã', callback_data='archive_clients_btn')) \
            .add(InlineKeyboardButton('–í–Ω–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ ‚ûï', callback_data='add_client_to_archive_btn')) \
            .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_admin_menu_btn'))
        return keyboard



    async def view_detail_archive_user(self, client_archive):
        emoji_dict = {True:" ‚úÖ", False: "üö´"}
        service_dict = {True: "–£—Å–ª—É–≥–∞ –æ–∫–∞–∑–∞–Ω–∞", False: "–£—Å–ª—É–≥–∞ –Ω–µ –æ–∫–∞–∑–∞–Ω–∞"}
        if not client_archive.last_check_date:
            last_check_date = "–ù–µ –ø—Ä–æ–≤–µ—Ä—è–ª—Å—è"
        else:
            last_check_date = client_archive.last_check_date
        self._msg = f'–§–ò–û: {client_archive.user_fio}\n' \
                    f'–ù–æ–º–µ—Ä: {client_archive.user_number}\n' \
                    f'–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {last_check_date}\n' \
                    f'–°—Ç–∞—Ç—É—Å: {service_dict[client_archive.user_status]}\n' \
                    f'–î–æ–±–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é: {emoji_dict[client_archive.user_added_manually]}\n\n' \
                    f'–ü–æ–º–µ—Ç–∫–∞: {client_archive.mark_from_partner}'
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_archive_btn'))
        return keyboard


    async def back_to_archive_kb(self):
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_archive_btn'))
        return keyboard


    async def add_to_archive_btn(self):
        self._msg = '<b>–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∞—Ä—Ö–∏–≤ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–∏—Å–∞—Ç—å –§–ò–û –∏ –Ω–æ–º–µ—Ä ' \
                    '—Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞. –¢–∞–∫ –∂–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–º–µ—Ç–∫—É –æ –∫–ª–∏–µ–Ω—Ç–µ.</b>\n\n' \
                    '–í–≤–µ–¥–∏—Ç–µ –§–ò–û –∫–ª–∏–µ–Ω—Ç–∞:'
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_archive_btn'))
        return keyboard


    async def add_to_archive_get_fio(self):
        self._msg = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:'
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_archive_btn'))
        return keyboard

    async def add_to_archive_get_number(self):
        self._msg = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –ø–æ–º–µ—Ç–∫—É –æ –∫–ª–∏–µ–Ω—Ç–µ:'
        keyboard = InlineKeyboardMarkup().add(
                InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_archive_btn'))
        return keyboard


    async def add_to_archive_get_mark(self):
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤ ‚úÖ', callback_data='add_to_archive_final')) \
            .add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å üö´', callback_data='back_to_archive_btn'))
        return keyboard




    async def add_user_to_archive(self, user_id, user_fio, user_number,
                                  user_added_manually, user_status, mark_from_partner):
        with session_factory() as session:
            user_archive_control = UserArchiveControl(session)
            await user_archive_control.add(user_id, user_fio, user_number,
                                           user_added_manually, user_status, mark_from_partner)
            session.commit()


    async def get_user_archive(self, user_id):
        with session_factory() as session:
            user_archive_control = UserArchiveControl(session)
            user_archive = await user_archive_control.get(user_id)
            session.commit()
        return user_archive


    async def update_last_check(self, user_id, mark):
        with session_factory() as session:
            user_archive_control = UserArchiveControl(session)
            user_archive = await user_archive_control.get(user_id)
            user_archive.last_check_date = datetime.datetime.now()
            if mark != "":
                user_archive.mark_from_partner += f"\n\n{mark}"
            session.commit()


    async def get_users_in_archive_as_buttons(self):
        with session_factory() as session:
            user_archive_control = UserArchiveControl(session)
            users = await user_archive_control.get_all()
            session.commit()
        buttons: dict = {}
        for user in users:
            buttons[f"user_number#{user.user_id}"] = user.user_fio

        return buttons