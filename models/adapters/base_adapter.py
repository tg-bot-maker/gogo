from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import types
from typing import Optional
from database.db import session_factory
from models.controls.user_controls import UserControl
from models.controls.history_control import CreditHistoryControl
from models.controls.user_documents_control import UserDocumentsControl
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
from configs import config

from APscheduler.notifications.admin_notifications import start_command_sent



class BaseAdapter:
    def __init__(self, user_id: Optional[int] = None):
        self._user_id = user_id
        self._inline_keyboard = InlineKeyboardMarkup()
        self._msg = ''

    @property
    def inline_keyboard(self) -> InlineKeyboardMarkup:
        return self._inline_keyboard

    @property
    def message_text(self) -> str:
        return self._msg


    async def start(self,
                    user_id: int,
                    user_name: str = None,
                    start_mode: bool = True,
                    user_manager_id: int = 0,
                    scheduler: AsyncIOScheduler = None,
                    message: types.Message = None
                    ) -> InlineKeyboardMarkup:

        """Start bot"""
        if start_mode:
             with session_factory() as session:
                user_control = UserControl(session)
                user = await user_control.get(user_id)
                if not user:
                    history_control = CreditHistoryControl(session)
                    upload_documents_control = UserDocumentsControl(session)
                    await upload_documents_control.add(user_id)
                    await user_control.add(user_id, user_name, user_manager_id)
                    session.commit()
                    with session_factory() as session:
                        await history_control.add(user_id)
                        session.commit()
                    scheduler.add_job(start_command_sent, trigger="date", run_date=datetime.now()+timedelta(seconds=5), kwargs={"message": message, "user_manager_id": user_manager_id})
                    user_control = UserControl(session)
                    user = await user_control.get(user_id)
                else:
                    pass

        else:
            with session_factory() as session:
                user_control = UserControl(session)
                user = await user_control.get(user_id)





        if user.user_stage == 'form':
            stage_text_to_add = f'–î–ª—è –Ω–∞—á–∞–ª–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–Ω—è—Ç—å, —Å–º–æ–∂–µ–º –º—ã –≤–∞—Å ' \
                                f'–æ–¥–æ–±—Ä–∏—Ç—å –∏–ª–∏ –Ω–µ—Ç, –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–∏—Ö —á–µ—Å—Ç–Ω–æ.\n\n' \
                                f'–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É</b> –∏ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç–µ –∫ –æ—Ç–≤–µ—Ç–∞–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:'
            stage_highlight = "1‚É£  <b>–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã</b> üëà\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \

            self._inline_keyboard.row(
                InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='form_question_0'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )
        elif user.user_stage == 'check_credit_history':
            stage_text_to_add = "–ú—ã —Ä–∞–¥—ã —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å!\n\n" \
                                "–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–∞–º–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞ –º—ã —Å–º–æ–∂–µ–º —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 90% –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å, –æ–¥–æ–±—Ä—è—Ç –≤–∞—Å –∏–ª–∏ –Ω–µ—Ç.\n" \
                                "–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø - —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –¥–æ–ª–≥–æ–≤ –Ω–∞ –§–°–°–ü –∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –û–ö–ë –∏ –ù–ë–ö–ò."



            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  <b>–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è</b> üëà\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \


            self._inline_keyboard.row(
                InlineKeyboardButton('–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è', callback_data='check_credit_history_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )
        elif user.user_stage == 'upload_docs':
            stage_text_to_add = "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ —Å–∫–∞–Ω—ã –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  <b>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</b> üëà\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \


            self._inline_keyboard.row(
                InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data='upload_documents_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == 'pick_product':
            stage_text_to_add = f'–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å ' \
                                f' –ø—Ä–æ–¥—É–∫—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ –∫–Ω–æ–ø–∫–µ üëá'
            stage_highlight = "<b>–í—ã–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞</b> üìç"

            self._inline_keyboard.row(
                        InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç', callback_data='pick_credit_product_btn'),
                        InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
                    )

        elif user.user_stage in ['contract_ready', 'prepare_contract']:
            stage_text_to_add = "<b>–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤–∞–º –Ω—É–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º –∏ –ø—Ä–∏–Ω—è—Ç—å –µ–≥–æ —É—Å–ª–æ–≤–∏—è üìÑ</b>"
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  <b>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞</b> üëà\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \

            self._inline_keyboard.add(
                        InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä', callback_data='get_contract_btn'),
                        InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
                    )

        elif user.user_stage in ['payment', 'payment_ready']:
            stage_text_to_add = "<b>–í—ã –ø—Ä–∏–Ω—è–ª–∏ —É—Å–ª–æ–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ ‚úÖ\n\n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.</b>"
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  <b>–û–ø–ª–∞—Ç–∞</b> üëà\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \


            self._inline_keyboard.add(
                InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å', callback_data='pay_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )
        elif user.user_stage == "payment_done":
            stage_text_to_add = "<b>–û—Ç–ª–∏—á–Ω–æ!\n–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.</b>"
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  <b>–û–ø–ª–∞—Ç–∞</b> üëà\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \


            self._inline_keyboard.add(
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )
        elif user.user_stage == "payment_approved":
            stage_text_to_add = "<b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ —É—Å–ª–æ–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ —Å–æ–≤–µ—Ä—à–∏–ª–∏ –æ–ø–ª–∞—Ç—É," \
                                " –º—ã —É–∂–µ –∑–∞–Ω–∏–º–∞–µ–º—Å—è –æ–¥–æ–±—Ä–µ–Ω–∏–µ–º –≤–∞—à–µ–π –∏–ø–æ—Ç–µ–∫–∏ ‚úî</b>"
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  <b>–û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏</b> üëà\n' \
                              '7‚É£  –†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ\n' \


            self._inline_keyboard.add(
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )
        elif user.user_stage == "mortgage_approving_result":
            if user.mortgage_result is True:
                stage_text_to_add = "<b>–í–∞—à–∞ –∏–ø–æ—Ç–µ–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! üéâ</b>\n" \
                                    "<i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ" \
                                    " –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–≤–æ–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ <b>–ü–æ–º–æ—â—å</b> –Ω–∏–∂–µ.</i>"
            elif user.mortgage_result is False:
                stage_text_to_add = "<b>–í–∞—à–∞ –∏–ø–æ—Ç–µ–∫–∞ –Ω–µ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.</b>\n" \
                                    "<i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ" \
                                    " –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–≤–æ–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ <b>–ü–æ–º–æ—â—å</b> –Ω–∏–∂–µ.</i>"
            else:
                stage_text_to_add = "<b>–í–∞—à–∞ –∏–ø–æ—Ç–µ–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏.</b>\n" \
                                    "<i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ" \
                                    " –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–≤–æ–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ <b>–ü–æ–º–æ—â—å</b> –Ω–∏–∂–µ.</i>"
            stage_highlight = "1‚É£  –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã\n" \
                              '2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n' \
                              '3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n' \
                              '4‚É£  –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è\n' \
                              '5‚É£  –û–ø–ª–∞—Ç–∞\n' \
                              '6‚É£  –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ø–æ—Ç–µ–∫–∏\n' \
                              '7‚É£  <b>–†–µ—à–µ–Ω–∏–µ –ø–æ –∏–ø–æ—Ç–µ–∫–µ</b> üëà\n' \


            self._inline_keyboard.row(
                InlineKeyboardButton('–ü–æ–¥–±–æ—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ üè°', callback_data='buy_estate_selection'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )




        # –≠–¢–ê–ü–´ –ü–û–ö–£–ü–ö–ò –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò
        elif user.user_stage == "buy_estate_form":
            stage_text_to_add = "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è –≤–∞—Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìù"
            stage_highlight = "1‚É£  <b>–ê–Ω–∫–µ—Ç–∞</b> üëà\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  –ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞\n" \
                              "6‚É£  –ü–æ–∫—É–ø–∫–∞\n" \

            self._inline_keyboard.add(
                InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='fill_the_buy_estate_form_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == "buy_estate_upload_docs":
            stage_text_to_add = "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã üìÑ"
            stage_highlight = "1‚É£  –ê–Ω–∫–µ—Ç–∞\n" \
                              "2‚É£  <b>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</b> üëà\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  –ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞\n" \
                              "6‚É£  –ü–æ–∫—É–ø–∫–∞\n" \

            self._inline_keyboard.add(
                InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data='buy_estate_upload_docs_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == "buy_estate_contract":
            stage_text_to_add = "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –¥–æ–≥–æ–≤–æ—Ä üìù"
            stage_highlight = "1‚É£  –ê–Ω–∫–µ—Ç–∞\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  <b>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞</b> üëà\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  –ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞\n" \
                              "6‚É£  –ü–æ–∫—É–ø–∫–∞\n" \

            self._inline_keyboard.add(
                #InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data='buy_estate_upload_docs_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == "buy_estate_payment":
            stage_text_to_add = "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥–∏ üìù"
            stage_highlight = "1‚É£  –ê–Ω–∫–µ—Ç–∞\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  <b>–û–ø–ª–∞—Ç–∞ üëà\n\n" \
                              "5‚É£  –ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞</b>" \
                              "6‚É£  –ü–æ–∫—É–ø–∫–∞\n" \

            self._inline_keyboard.add(
                InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å', callback_data='buy_estate_pay_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == "buy_estate_selection":
            stage_text_to_add = "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –ø—Ä–µ–æ–±—Ä–µ—Ç–∏ –µ–µ –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ ‚úÖ"
            stage_highlight = "1‚É£  –ê–Ω–∫–µ—Ç–∞\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  <b>–ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞</b> üëà\n" \
                              "6‚É£  –ü–æ–∫—É–ø–∫–∞\n" \


            self._inline_keyboard.add(
                InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç—ã', callback_data='check_the_objects_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )


        elif user.user_stage == "buy_estate_buying":
            stage_text_to_add = "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –ø—Ä–µ–æ–±—Ä–µ—Ç–∏ –µ–µ –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ ‚úÖ"
            stage_highlight = "1‚É£  –ê–Ω–∫–µ—Ç–∞\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  –ü–æ–¥–±–æ—Ä –æ–±—ä–µ–∫—Ç–∞\n" \
                              "6‚É£  <b>–ü–æ–∫—É–ø–∫–∞</b> üëà\n" \


            self._inline_keyboard.add(
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )





        # –≠–¢–ê–ü–´ –ü–†–û–î–ê–ñ–ò –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò
        elif user.user_stage == "sell_estate_form":
            stage_text_to_add = "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º –ø—Ä–æ–¥–∞—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìù"
            stage_highlight = "1‚É£  <b>–ê–Ω–∫–µ—Ç–∞</b> üëà\n" \
                              "2‚É£  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n" \
                              "3‚É£  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞\n" \
                              "4‚É£  –û–ø–ª–∞—Ç–∞\n" \
                              "5‚É£  –ü—Ä–æ–¥–∞–∂–∞\n" \

            self._inline_keyboard.add(
                InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='fill_the_sell_estate_form_btn'),
                InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn')
            )





        elif user.user_stage == "finish":
            stage_text_to_add = "<b>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!/<b>"
            stage_highlight = ""


            self._inline_keyboard.add(
                InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å', callback_data='leave_feedback_btn')) \
                .add(InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help_btn'))

        else:
            stage_highlight = ""
            stage_text_to_add = ""







        if user_id in config.admins:
            self._msg = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>!\n\n' \
                        f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–∞–ø–µ:\n' \
                        f'{stage_highlight}\n\n' \
                        f'{stage_text_to_add}'
            self._inline_keyboard.add(InlineKeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='admin_panel_btn'))
            self._inline_keyboard.add(InlineKeyboardButton('–ö–∞–±–∏–Ω–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞', callback_data='partner_menu_handler'))
            self._inline_keyboard.add(InlineKeyboardButton('–ö–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞', callback_data='personal_panel_btn'))

        elif user.is_partner:
            self._msg = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>–ø–∞—Ä—Ç–Ω–µ—Ä</b>!\n\n' \
                        f'<i>–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–π—Ç–∏ –≤—Å–µ —ç—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.\n' \
                        f'–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∫–ª–∏–µ–Ω—Ç–∞ –±—É–¥—É—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω—ã –∑–∞ –≤–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.</i>\n\n' \
                        f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–∞–ø–µ:\n' \
                        f'{stage_highlight}\n\n' \
                        f'{stage_text_to_add}'
            self._inline_keyboard.add(InlineKeyboardButton('–ö–∞–±–∏–Ω–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞', callback_data='partner_menu_handler'))
            self._inline_keyboard.add(InlineKeyboardButton('–ö–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞', callback_data='personal_panel_btn'))


        elif user.user_manager_id != 0000000000:
            with session_factory() as session:
                user_control = UserControl(session)
                user_partner = await user_control.get(user.user_manager_id)

                self._msg = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–í–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä - @{user_partner.user_name}\n\n' \
                        f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–∞–ø–µ:\n' \
                        f'{stage_highlight}\n\n' \
                        f'{stage_text_to_add}'
            self._inline_keyboard.add(InlineKeyboardButton('–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='personal_panel_btn'))


        else:
            self._msg = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n' \
                        f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–∞–ø–µ:\n' \
                        f'{stage_highlight}\n\n' \
                        f'{stage_text_to_add}'
            self._inline_keyboard.add(InlineKeyboardButton('–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='personal_panel_btn'))


        if user.user_stage == 'greetings':
            self._msg = 'greetings'
            self._inline_keyboard = InlineKeyboardMarkup().row(InlineKeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='registration_btn'))
            return self.inline_keyboard


        return self.inline_keyboard


    async def admin_menu_kb(self):
        keyboard = InlineKeyboardMarkup()
        webAppTest = types.WebAppInfo(url="https://max-test-domain.site/webapp_page?key=eANH55sHJy3pF2I")

        webapp_button = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É üëÄ', web_app=webAppTest)
        keyboard.add(InlineKeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—ã üìÅ', callback_data='partners_panel_for_admin_btn')) \
        .add(InlineKeyboardButton('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ üîé', callback_data='admin_analytics_btn')) \
        .add(InlineKeyboardButton('–ê—Ä—Ö–∏–≤ üóÑ', callback_data='archive_btn')) \
        .add(webapp_button) \
        .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))
        #.add(InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä–µ–∫—Ç—ã üó∫', callback_data='check_the_objects_btn')) \

        return keyboard


    async def partner_menu_kb(self):
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ü§ù', callback_data='referral_system_btn')) \
        .row(InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä üìÑ', callback_data='generate_contract_btn'),
        InlineKeyboardButton('–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É üí∞', callback_data='payments_btn')) \
        .add(InlineKeyboardButton('–í—Å—Ç—Ä–µ—á–∏ ü§ù', callback_data='meetings_btn')) \
        .add(InlineKeyboardButton('–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏ üõ†', callback_data='legal_services_btn')) \
        .add(InlineKeyboardButton('–§–∏–Ω–∞–Ω—Å—ã üõ†', callback_data='finances_btn')) \
        .add(InlineKeyboardButton('–ò–ø–æ—Ç–µ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä üßÆ', url="https://calcus.ru/kalkulyator-ipoteki")) \
        .add(InlineKeyboardButton('–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ üõ°', callback_data='partner_menu_insurance_btn')) \
        .add(InlineKeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã –±–∞–Ω–∫–æ–≤ üìû', callback_data='bank_contacts_btn')) \
        .add(InlineKeyboardButton('–£—Å–ª–æ–≤–∏—è –±–∞–Ω–∫–æ–≤ üè¶', url="https://docs.google.com/spreadsheets/d/1ffcfjHBWhJdYMcgvPUVihtrcnXWfULHE12yMBZy24oQ/edit?usp=sharing")) \
        .add(InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî', callback_data='notifications_btn')) \
        .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))

        return keyboard


    async def analytics_kb(self, show_form_button: bool):
        keyboard = InlineKeyboardMarkup()
        user = await self.get_user(self._user_id)
        if user.user_manager_id == 0000000000 and user.is_partner is False:
            keyboard.add(InlineKeyboardButton('–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞', callback_data=f'assign_manager_btn#{user.user_id}'))
        keyboard.add(InlineKeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', callback_data='control_client_btn'))
        if show_form_button:
            keyboard.add(InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='show_form'))
        return keyboard.add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_to_analytics_btn'))


    async def back_kb(self):
        return InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))



    async def back_to_admin_kb(self):
        return InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_admin_menu_btn'))


    async def get_users_as_buttons(self):
        with session_factory() as session:
            user_control = UserControl(session)
            users = await user_control.get_all()
            session.commit()
        buttons: dict = {}
        for user in users:
            if user.user_fio == "–ê–Ω–æ–Ω–∏–º":
                name = f"TG: {user.user_name}"
            else:
                name = user.user_fio
            buttons[f"user_number#{user.user_id}"] = name

        return buttons



    async def get_users_for_invoice_as_buttons(self):
        with session_factory() as session:
            user_control = UserControl(session)
            users = await user_control.get_clients_without_invoice()
            session.commit()
        buttons: dict = {}
        for user in users:
            if user.user_fio != "–ê–Ω–æ–Ω–∏–º":
                name = user.user_fio
            else:
                name = f"TG: {user.user_name}"
            buttons[f"user_number#{user.user_id}"] = name

        return buttons


    async def get_users_for_invoice_for_partner_as_buttons(self, partner_id):
        with session_factory() as session:
            user_control = UserControl(session)
            users = await user_control.get_clients_without_invoice_for_partner(partner_id)
            session.commit()
        buttons: dict = {}
        for user in users:
            if user.user_fio != "–ê–Ω–æ–Ω–∏–º":
                name = user.user_fio
            else:
                name = f"TG: {user.user_name}"
            buttons[f"user_number#{user.user_id}"] = name

        return buttons


    async def get_user(self, user_id: int):
        with session_factory() as session:
            user_control = UserControl(session)
            user = await user_control.get(user_id)
            session.commit()
        return user







