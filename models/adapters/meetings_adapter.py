from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import Optional





class MeetingsAdapter:
    def __init__(self, user_id: Optional[int] = None):
        self._user_id = user_id
        self._inline_keyboard = InlineKeyboardMarkup()
        self._msg = ''

    @property
    def inline_keyboard(self) -> InlineKeyboardMarkup:
        return self._inline_keyboard

    @property
    def message_text(self) -> str:
        return self._msg


    async def meetings_btn(self):
        self._msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:</b>'
        self._inline_keyboard = InlineKeyboardMarkup()\
            .add(InlineKeyboardButton(text="–ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—Å—Ç—Ä–µ—á  üóì", url="https://calendar.google.com/")) \
            .add(InlineKeyboardButton(text="–®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π  üìé", callback_data="meetings_message_templates_btn")) \
            .add(InlineKeyboardButton(text="‚óÄÔ∏è   –ù–∞–∑–∞–¥    ", callback_data="back_to_partner_menu_btn"))
        return self._inline_keyboard


    async def meetings_message_templates_btn(self):
        self._msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è:</b>'
        self._inline_keyboard = InlineKeyboardMarkup()\
            .add(InlineKeyboardButton(text="üìç –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ", callback_data="meeting_reminder_template_btn")) \
            .add(InlineKeyboardButton(text="üìç –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data="meeting_dox_list_template_btn")) \
            .add(InlineKeyboardButton(text="‚óÄÔ∏è   –ù–∞–∑–∞–¥    ", callback_data="meetings_btn"))
        return self._inline_keyboard

"""
    async def update_client_step_help_notification_job_id(self, user_id, job_id):
        with session_factory() as session:
            user_control = UserControl(session)
            user = await user_control.get(user_id)
            user.client_step_help_notification_job_id = job_id
            session.commit()

        return True"""