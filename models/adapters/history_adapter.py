from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import Optional
from database.db import session_factory
from models.adapters.user_adapter import UserAdapter
from models.adapters.admin_panel_adapter import AdminPanelAdapter
from models.controls.history_control import CreditHistoryControl


class HistoryAdapter:
    def __init__(self, user_id: Optional[int] = None):
        self._user_id = user_id
        self._inline_keyboard = InlineKeyboardMarkup()
        self._msg = ''

    @property
    def inline_keyboard(self) -> InlineKeyboardMarkup:
        return self._inline_keyboard

    @property
    def message_text(self) -> str:
        return self._msg


    async def check_credit_history_btn(self, user_id):
        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(user_id)
            session.commit()

        keyboard = InlineKeyboardMarkup()
        if history.credit_history_user_debts is None:
            self._msg = "<b>–° –ø–æ–º–æ—â—å—é –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –±–∞–Ω–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏–µ –ø–æ –æ–¥–æ–±—Ä–µ–Ω–∏—é –∏–ø–æ—Ç–µ–∫–∏. –ü–æ—ç—Ç–æ–º—É –¥–ª—è –Ω–∞—Å –≤–∞–∂–Ω–æ –ø–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π –≤—Å–µ" \
                                " –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –¢–∞–∫ –∂–µ, –∫–∞–∫ –∏ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è –Ω–∞ —à—Ç—Ä–∞—Ñ—ã –∏ –¥–æ–ª–≥–∏ –Ω–∞ –§–°–°–ü. –ü–æ—Ç–æ–º—É —á—Ç–æ –¥–∞–∂–µ 2000 —Ä. —à—Ç—Ä–∞—Ñ–∞ –º–æ–≥—É—Ç " \
                                "–ø–æ—Å–ª—É–∂–∏—Ç—å –¥–ª—è –±–∞–Ω–∫–∞ –ø—Ä–∏—á–∏–Ω–æ–π –¥–ª—è –æ—Ç–∫–∞–∑–∞.\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –§–°–°–ü.\n–ó–∞–≥—Ä—É–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –Ω—É–∂–Ω–æ. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –¥–æ–ª–≥–æ–≤.</b>"
            keyboard.add(InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–µ–π', callback_data='history_check_debts_btn')) \
             .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))
        elif history.credit_history_user_okb is None and history.credit_history_user_debts is not None:
            self._msg = "<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º –æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –û–ö–ë.\n\n–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–π–¥–µ—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.</b>"
            keyboard.add(InlineKeyboardButton('–û—Ç—á–µ—Ç –û–ö–ë', callback_data='history_check_okb_btn')) \
                .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))
        else:
            self._msg = "<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º –æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –ë–ö–ò.\n\n–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–π–¥–µ—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.</b>"
            keyboard.add(InlineKeyboardButton('–û—Ç—á–µ—Ç –ë–ö–ò', callback_data='history_check_bki_btn')) \
                .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='go_back_btn'))


       # self._msg = "<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–≤–∞ —Ñ–∞–π–ª–∞ —Å –æ—Ç—á–µ—Ç–∞–º–∏ –æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏.\n\n–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –æ—Ç—á–µ—Ç–∞–º–∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–π–¥–µ—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.\n\n–ü–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:</b>"
        return keyboard


    async def check_history_bki_btn(self):
        self._msg = "<b>–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à—É –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.</b>\n\n" \
                    "<b>–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:</b>\n" \
                    "<b>1</b> - –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç https://person.nbki.ru \n"  \
                    "<b>2</b> - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ, —É–∫–∞–∑–∞–≤ email –∏ —Å–æ–∑–¥–∞–≤ –ø–∞—Ä–æ–ª—å. \n" \
                    "<b>3</b> - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email. \n" \
                    "<b>4</b> - –ó–∞–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç https://person.nbki.ru \n" \
                    "<b>5</b> - –£–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞. \n" \
                    "<b>6</b> - –ù–∞–∂–∞—Ç—å <i>–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏</i>, –í–∞—Å –ø–µ—Ä–µ–±—Ä–æ—Å–∏—Ç –Ω–∞ —Å–∞–π—Ç –ì–æ—Å—É—Å–ª—É–≥, –≥–¥–µ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç –ì–æ—Å—É—Å–ª—É–≥. (–ï—Å–ª–∏ —É –í–∞—Å –Ω–µ—Ç –ì–æ—Å—É—Å–ª—É–≥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–æ—á–∫–∞—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤). \n" \
                    "<b>7</b> - –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–π—Ç–∏ –≤ <i>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</i>. \n" \
                    "<b>8</b> - –í—ã–±—Ä–∞—Ç—å <i>–ó–∞–∫–∞–∑–∞—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç</i>. \n" \
                    "<b>9</b> - –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–∞–π—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É. \n" \
                    "<b>10</b> - –í–∞—à –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤, –Ω–∞–∂–º–∏—Ç–µ <i>–°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç</i>. " \

        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç (PDF —Ñ–∞–π–ª)', callback_data='upload_file_bki_btn'))\
            .add(InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', callback_data='history_view_video_instruction_bki_btn')) \
            .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_btn'))

        return keyboard



    async def history_view_video_instruction_bki_btn(self):
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_bki_btn'))
        return keyboard


    async def check_history_okb_btn(self):
        self._msg = "<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ç—Ä–∏—é —Å –ø–æ–º–æ—â—å—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ —Å —Å–∞–π—Ç–∞ –ì–æ—Å. —É—Å–ª—É–≥–∏. \n\n" \
                    "–î–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –û–ö–ë –ø–æ —Å—Å—ã–ª–∫–µ https://credistory.ru, –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ì–æ—Å. —É—Å–ª—É–≥–∏ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.</b>"
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç (PDF —Ñ–∞–π–ª)', callback_data='upload_file_okb_btn')) \
            .add(InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', callback_data='history_view_video_instruction_okb_btn')) \
                .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_btn'))

        return keyboard

    async def history_view_video_instruction_okb_btn(self):
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='to_ltsc_btn'))
        return keyboard


    async def check_debts_btn(self):
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –ì–æ—Å—É—Å–ª—É–≥–∞–º', url="https://www.gosuslugi.ru/")) \
                .add(InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞, –¥–æ–ª–≥–æ–≤ –Ω–µ—Ç', callback_data='check_done_no_debts_btn')) \
                .add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_btn'))

        return keyboard


    async def check_done_no_debts_btn(self, user_id):
        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(user_id)
            history.credit_history_user_debts = True
            session.commit()

        self._msg = "<b>–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É üëá</b>"
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('    –ü–µ—Ä–µ–π—Ç–∏    ', callback_data='back_to_check_credit_history_btn'))
        return keyboard

    async def upload_file_okb_btn(self, user_id):
        keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_btn'))
        self._msg = "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º –û–ö–ë</b>"

        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(user_id)
            session.commit()


        if history.credit_history_user_okb is None:
            self._msg = "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º –û–ö–ë</b>"
            take_file = True
        else:
            self._msg = "<b>–û—Ç—á–µ—Ç –û–ö–ë –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É üëá</b>"
            keyboard = InlineKeyboardMarkup().add(
                InlineKeyboardButton('    –ü–µ—Ä–µ–π—Ç–∏    ', callback_data='back_to_check_credit_history_btn'))
            take_file = False

        return keyboard, take_file



    async def upload_file_bki_btn(self, user_id):
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton('‚óÄÔ∏è   –ù–∞–∑–∞–¥    ', callback_data='back_to_check_credit_history_bki_btn'))

        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(user_id)
            session.commit()

        if history.credit_history_user_bki is None:
            self._msg = "<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º –ë–ö–ò</b>"
            take_file = True
        else:
            self._msg = "<b>–û—Ç—á–µ—Ç –ë–ö–ò –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω!</b>"
            take_file = False

        return keyboard, take_file


    async def add_bki(self, credit_history_user_id, credit_history_user_bki, call, scheduler):
        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(credit_history_user_id)
            history.credit_history_user_bki = credit_history_user_bki

            if history.credit_history_user_okb is not None:
                user_adapter = UserAdapter()
                admin_panel_adapter = AdminPanelAdapter()
                if await admin_panel_adapter.get_user_payment(call.from_user.id):
                    await user_adapter.update_user_stage(call.from_user.id, "payment_ready", call, scheduler)
                else:
                    await user_adapter.update_user_stage(call.from_user.id, "payment", call, scheduler)
                new_stage = True
            else:
                new_stage = False
            session.commit()
            return new_stage

    async def add_okb(self, credit_history_user_id, credit_history_user_okb, call, scheduler):
        with session_factory() as session:
            history_controller = CreditHistoryControl(session)
            history = await history_controller.get(credit_history_user_id)
            history.credit_history_user_okb = credit_history_user_okb

            if history.credit_history_user_bki is not None:
                user_adapter = UserAdapter()
                admin_panel_adapter = AdminPanelAdapter()
                if await admin_panel_adapter.get_user_payment(call.from_user.id):
                    await user_adapter.update_user_stage(call.from_user.id, "payment_ready", call, scheduler)
                else:
                    await user_adapter.update_user_stage(call.from_user.id, "payment", call, scheduler)
                new_stage = True
            else:
                new_stage = False
            session.commit()
            return new_stage

