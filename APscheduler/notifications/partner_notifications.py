from aiogram import types
from configs.config import stages

from models.adapters.notifications_adapter import NotificationsAdapter

check_notifications_status = NotificationsAdapter().check_notifications_status


async def notify_partner_assigned(message: types.Message, partner_id):
    """ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –æ —Ç–æ–º —á—Ç–æ –æ–Ω –Ω–∞–∑–Ω–∞—á–µ–Ω –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º"""
    text = "<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üîî</b>\n" \
           f"–í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º! üéâ"
    if await check_notifications_status(partner_id):
        await message.bot.send_message(chat_id=partner_id, text=text)


async def notify_partner_new_client(message: types.Message, partner_id):
    """ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –æ —Ç–æ–º —á—Ç–æ —É –Ω–µ–≥–æ –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç"""
    text = "<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üîî</b>\n" \
           f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –ø–µ—Ä–µ—à–µ–ª –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!"
    if await check_notifications_status(partner_id):
        await message.bot.send_message(chat_id=partner_id, text=text)



async def notify_partner_client_new_step(user, step, call):
    """ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –æ —Ç–æ–º —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ—à–µ–ª –Ω–∞ –Ω–æ–≤—ã–π —ç—Ç–∞–ø"""
    text = "<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üîî</b>\n" \
             f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.user_name} –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —ç—Ç–∞–ø <b>{stages[step]}</b>!"
    if await check_notifications_status(user.user_manager_id):
        await call.bot.send_message(chat_id=user.user_manager_id, text=text)
